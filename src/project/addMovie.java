/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package project;


import java.awt.Image;
import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Random;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JFileChooser;
import javax.swing.*;
import java.util.regex.*;

/**
 *
 * @author meme
 */
public class addMovie extends javax.swing.JFrame {

    /**
     * Creates new form addMovie
     */
    Connection con = null;
    ResultSet rs = null;
    ResultSet rs1 = null;
    PreparedStatement pst = null;
    PreparedStatement pst1 = null;
    PreparedStatement pst2 = null;
    Statement stmt = null;
    
    public addMovie() {
        initComponents();
        con=db.java_db();
        displaytoCB();
    }
 
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jRadioButton2 = new javax.swing.JRadioButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        addbtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        titleTxt = new javax.swing.JTextField();
        dateTxt = new javax.swing.JTextField();
        langCB = new javax.swing.JComboBox<>();
        ratingCB = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        lengthTxt = new javax.swing.JTextField();
        genreTxt = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        khCB = new javax.swing.JCheckBox();
        dmmCB = new javax.swing.JCheckBox();
        attachbtn = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        DltBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        ABLbl = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        exitBtn = new javax.swing.JButton();
        jLabel34 = new javax.swing.JLabel();
        srchBtn = new javax.swing.JButton();
        titleCB = new javax.swing.JComboBox<>();

        jLabel5.setText("Moive Genre:");

        jRadioButton2.setText("jRadioButton2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(208, 122, 45), 10));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "FILMAX", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Kohinoor Bangla", 1, 14), new java.awt.Color(208, 122, 45))); // NOI18N

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Heiti SC", 0, 13)); // NOI18N
        jLabel3.setText("Movie Title:");

        jLabel4.setFont(new java.awt.Font("Heiti SC", 0, 13)); // NOI18N
        jLabel4.setText("Movie Genre:");

        jLabel6.setFont(new java.awt.Font("Heiti SC", 0, 13)); // NOI18N
        jLabel6.setText("Movie Language:");

        jLabel7.setFont(new java.awt.Font("Heiti SC", 0, 13)); // NOI18N
        jLabel7.setText("Movie Rating:");

        jLabel8.setFont(new java.awt.Font("Heiti SC", 0, 13)); // NOI18N
        jLabel8.setText("Release Date:");

        jLabel9.setFont(new java.awt.Font("Heiti SC", 0, 13)); // NOI18N
        jLabel9.setText("Insert image here:");

        addbtn.setText("Add");
        addbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbtnActionPerformed(evt);
            }
        });

        clearBtn.setText("Clear");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        dateTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateTxtActionPerformed(evt);
            }
        });

        langCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Arabic", "English" }));
        langCB.setSelectedIndex(-1);
        langCB.setToolTipText("");
        langCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                langCBActionPerformed(evt);
            }
        });

        ratingCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PG12", "PG15", "R18", "21+" }));
        ratingCB.setSelectedIndex(-1);

        jLabel13.setFont(new java.awt.Font("Heiti SC", 0, 13)); // NOI18N
        jLabel13.setText("Movie Length:");

        jLabel14.setFont(new java.awt.Font("Heiti SC", 0, 13)); // NOI18N
        jLabel14.setText("Branch:");

        khCB.setText("Khobar");
        khCB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                khCBMouseClicked(evt);
            }
        });
        khCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                khCBActionPerformed(evt);
            }
        });

        dmmCB.setText("Dammam");
        dmmCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dmmCBActionPerformed(evt);
            }
        });

        attachbtn.setText("Attach");
        attachbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attachbtnActionPerformed(evt);
            }
        });

        jLabel10.setBackground(new java.awt.Color(208, 122, 45));

        jButton1.setText("Update");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        DltBtn.setText("Delete");
        DltBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DltBtnActionPerformed(evt);
            }
        });

        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(208, 122, 45));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ABLbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ABLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(64, 64, 64))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(49, 49, 49)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(titleTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                            .addComponent(genreTxt))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(ratingCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(dateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(23, 23, 23)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(langCB, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lengthTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(123, 123, 123)
                                        .addComponent(khCB)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(addbtn)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton1)
                                        .addGap(26, 26, 26)))
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(DltBtn)
                                    .addComponent(dmmCB)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addComponent(clearBtn)
                                .addGap(26, 26, 26)
                                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(43, 43, 43)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel10))))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 96, Short.MAX_VALUE)
                                .addComponent(attachbtn)
                                .addGap(86, 86, 86))))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(titleTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(attachbtn)
                        .addContainerGap(12, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(genreTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel10)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(ratingCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(dateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(12, 12, 12)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(langCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addGap(12, 12, 12)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel13)
                                    .addComponent(lengthTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel14)
                                    .addComponent(khCB)
                                    .addComponent(dmmCB))
                                .addGap(31, 31, 31)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(addbtn)
                                    .addComponent(jButton1)
                                    .addComponent(DltBtn))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(clearBtn)
                                    .addComponent(backBtn))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(208, 122, 45));
        jLabel2.setText("Manage Movies");

        exitBtn.setForeground(new java.awt.Color(208, 122, 45));
        exitBtn.setText("X");
        exitBtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });

        jLabel34.setFont(new java.awt.Font("Heiti SC", 1, 13)); // NOI18N
        jLabel34.setText("Search Movie:");

        srchBtn.setText("Search");
        srchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                srchBtnActionPerformed(evt);
            }
        });

        titleCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                titleCBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel34)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(titleCB, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(srchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(234, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addContainerGap(234, Short.MAX_VALUE)))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(551, Short.MAX_VALUE)
                    .addComponent(exitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(srchBtn)
                    .addComponent(titleCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(439, Short.MAX_VALUE)))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(exitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(446, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void addbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbtnActionPerformed
        
        try{
         int branch=0;
        if (khCB.isSelected()){
           branch=1;
           
        }
        else if(dmmCB.isSelected()){
           branch=2; 
        }
         else if(khCB.isSelected() && dmmCB.isSelected()){
           branch=12;
        }
         else{
         JOptionPane.showMessageDialog(null, "Please choose at least one branch!");
         }
        
        String t = titleTxt.getText();
                String g = genreTxt.getText();
                String rd = dateTxt.getText();
                String l = lengthTxt.getText();
                String lang = langCB.getSelectedItem().toString();
                String r = ratingCB.getSelectedItem().toString();
                
                String s ="";

             
            for (char c : g.toCharArray()){
            if(!(Character.isAlphabetic(c))){
            checksgb =false;
                }
             }  
             
             if (!checksgb){
                 s+= "\nInvalid Movie Genre";
                 ckeckall =false;
                 genreTxt.setText("");
             }
             else{
                 ckeckall =true;
             } 
             

             Pattern pattern = Pattern.compile("^\\d.\\d{2}.$");
             if(!(pattern.matcher(l).matches()))  {
                  s+= "\nInvalid Movie Length";
                 ckeckall1 =false;
                 lengthTxt.setText("");
             }
             else{
                ckeckall1 =true; 
             }
             

             
             Pattern DATE_PATTERN = Pattern.compile("^\\d{4}-\\d{2}-\\d{2}$");
            String rdtrim = rd.trim();
             if(!(DATE_PATTERN.matcher(rdtrim).matches()))  {
                  s+= "\nInvalid Release Date";
                 ckeckall2 =false;
                 dateTxt.setText("");
             }
             else{
                ckeckall2 =true; 
             }  
                
                
              if(!(ckeckall && ckeckall1 && ckeckall2)){
                JOptionPane.showMessageDialog(null, s, "",JOptionPane.ERROR_MESSAGE);
              }
              else{
        boolean avail=false;        
        String checkAvail = "select movieid from screenings";
        pst1=con.prepareStatement(checkAvail);
        rs1 =pst1.executeQuery();
        while(rs1.next()){
            String available =rs1.getString(1);
            if(available==null){
                avail=true;
                break;
            }
            else{
                avail=false;
//                break;
            }
            
        }
        if(!avail){
            JOptionPane.showMessageDialog(null,"Failed to add movie, there are no available halls!");
        }
        else{
        
           String sql = "Insert into Movie"+"(MovieTitle, MovieId, Lang, Length, Rating, RDate, genre, image, branchId)"+"values (?,?,?,?,?,?,?,?,?)";
         pst=con.prepareStatement(sql);
         
         pst.setString(1, titleTxt.getText());
         
         Random rand = new Random(); 
         int random=rand.nextInt((9999-1001)+1)+1001;
            
         pst.setInt(2, random);

         String selected_lang = langCB.getItemAt(langCB.getSelectedIndex()); 
        
         pst.setString(3,selected_lang);
         pst.setString(4,lengthTxt.getText());
         
         String selected_rating = ratingCB.getItemAt(ratingCB.getSelectedIndex()); 
         pst.setString(5,selected_rating);
         pst.setString(6,dateTxt.getText());
         pst.setString(7,genreTxt.getText());
         pst.setString(8,filename);
         pst.setInt(9,branch);
            
         pst.execute();
         movienameh =  titleTxt.getText();
        JOptionPane.showMessageDialog(null, titleTxt.getText()+" added successfully!","",JOptionPane.INFORMATION_MESSAGE);
                titleCB.addItem(titleTxt.getText());
                titleTxt.setText("");
                genreTxt.setText("");
                ratingCB.setSelectedIndex(-1);
                dateTxt.setText("");
                langCB.setSelectedIndex(-1);
                lengthTxt.setText("");
                ABLbl.setIcon(null);
                khCB.setSelected(false);
                dmmCB.setSelected(false);
    
                
        hallselection hall = new hallselection();
        hall.setVisible(true);
        this.setVisible(false);
        }}}
    catch(Exception e){
         JOptionPane.showMessageDialog(null, e);
    }
        
        
    }//GEN-LAST:event_addbtnActionPerformed

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
    int response2 = JOptionPane.showConfirmDialog(this, "Clear all information?", "Confirm clear", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if(response2 == JOptionPane.YES_OPTION){
                titleTxt.setText("");
                genreTxt.setText("");
                ratingCB.setSelectedIndex(-1);
                dateTxt.setText("");
                langCB.setSelectedIndex(-1);
                lengthTxt.setText("");
                ABLbl.setIcon(null);
                khCB.setSelected(false);
                dmmCB.setSelected(false);
            }
    }//GEN-LAST:event_clearBtnActionPerformed

    private void dateTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateTxtActionPerformed

    private void langCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_langCBActionPerformed
//   tring selected = this.ComboBox.GetItemText(this.ComboBox.SelectedItem);
    }//GEN-LAST:event_langCBActionPerformed

    private void dmmCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dmmCBActionPerformed
         branchID = 2;
    }//GEN-LAST:event_dmmCBActionPerformed

    private void khCBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_khCBMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_khCBMouseClicked

    private void attachbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attachbtnActionPerformed
try{
        JFileChooser chooser =new JFileChooser();
        chooser.showOpenDialog(null); 
        File f = chooser.getSelectedFile();
        filename = f.getAbsolutePath();
     
         ImageIcon imageicon = new ImageIcon(new ImageIcon(filename).getImage().getScaledInstance(ABLbl.getWidth(),ABLbl.getHeight(),Image.SCALE_DEFAULT));
         ABLbl.setIcon(imageicon);
}
catch(Exception e){
       JOptionPane.showMessageDialog(null, e);
}
    }//GEN-LAST:event_attachbtnActionPerformed

    private void khCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_khCBActionPerformed
        branchID = 1;
    }//GEN-LAST:event_khCBActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       
        int index = langCB.getSelectedIndex();
        int index1 =ratingCB.getSelectedIndex();
        
        if(titleTxt.getText().equals("")||genreTxt.getText().equals("")||dateTxt.getText().equals("")
            ||lengthTxt.getText().equals("")||(index==-1)|| (index1==-1) || (!(khCB.isSelected()) && !(dmmCB.isSelected()))
        ){
        JOptionPane.showMessageDialog(null, "Some required fileds are empty!","Fill All Fields",JOptionPane.ERROR_MESSAGE);
        }
        else{
        int updateR = JOptionPane.showConfirmDialog(this, "Are you sure you want to update "+titleTxt.getText()+"'s information?", "Confirm update", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if(updateR == JOptionPane.YES_OPTION){
            
            try{
                
                String t = titleTxt.getText();
                String g = genreTxt.getText();
                String rd = dateTxt.getText();
                String l = lengthTxt.getText();
                String lang = langCB.getSelectedItem().toString();
                String r = ratingCB.getSelectedItem().toString();
                int branch;

                if(khCB.isSelected())
                    branch=1;

                else if(dmmCB.isSelected())
                    branch=2;
                else if(dmmCB.isSelected() && khCB.isSelected())
                    branch=12;
                else
                    branch=0;
                
               
                String s ="";

             
            for (char c : g.toCharArray()){
            if(!(Character.isAlphabetic(c))){
            checksgb =false;
                }
             }  
             
             if (!checksgb){
                 s+= "\nInvalid Movie Genre";
                 ckeckall =false;
                 genreTxt.setText("");
             }
             else{
                 ckeckall =true;
             } 
             

             Pattern pattern = Pattern.compile("^\\d.\\d{2}.$");
             if(!(pattern.matcher(l).matches()))  {
                  s+= "\nInvalid Movie Length";
                 ckeckall1 =false;
                 lengthTxt.setText("");
             }
             else{
                ckeckall1 =true; 
             }
             

             
             Pattern DATE_PATTERN = Pattern.compile("^\\d{4}-\\d{2}-\\d{2}$");
            String rdtrim = rd.trim();
             if(!(DATE_PATTERN.matcher(rdtrim).matches()))  {
                  s+= "\nInvalid Release Date";
                 ckeckall2 =false;
                 dateTxt.setText("");
             }
             else{
                ckeckall2 =true; 
             }  
                
                
              if(!(ckeckall && ckeckall1 && ckeckall2)){
                JOptionPane.showMessageDialog(null, s, "",JOptionPane.ERROR_MESSAGE);

              }  
              else{
                       String info="Is the following information correct?\nMovie Title: "+t
                        +"\nGenre: "+g+"\nRelease Date: "+rd+"\nLength: "
                        +l+"\nLanguage: "+l+"\nRating: "+r+"\nBranch: "
                        +branch;
                
                int infoR = JOptionPane.showConfirmDialog(this, info , "Confirm information", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                
                if(infoR == JOptionPane.YES_OPTION){
                    try{

                    int branchID=0;

                    if(khCB.isSelected())
                        branchID=1;

                    else if(dmmCB.isSelected())
                        branchID=2;

                    else
                        branchID=0;
                    String ti = titleCB.getSelectedItem().toString();

                    String sql="UPDATE Movie SET MovieTitle='"+t+"', genre='"+g+"', RDate='"+rd
                            +"', length='"+l+"', lang='"+lang+"',Rating='"+r+"', branchId='"+branch+"', image='"+filename+"' WHERE MovieTitle='"
                            +ti+"'";

                    pst=con.prepareStatement(sql);
                    pst.execute();
                    JOptionPane.showMessageDialog(null, "Record updated sucessfully!", "",JOptionPane.INFORMATION_MESSAGE);

                    titleCB.removeItemAt(titleCB.getSelectedIndex());
                    titleCB.addItem(titleTxt.getText());
                    
                    titleTxt.setText("");
                    genreTxt.setText("");
                    ratingCB.setSelectedIndex(-1);
                    dateTxt.setText("");
                    langCB.setSelectedIndex(-1);
                    lengthTxt.setText("");
                    ABLbl.setIcon(null);
                    khCB.setSelected(false);
                    dmmCB.setSelected(false);
                    
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, e.getMessage(), "",JOptionPane.ERROR_MESSAGE);
                }
                finally{
                    try{
                        pst.close();
                    }catch(Exception e){
                        JOptionPane.showMessageDialog(null, e.getMessage(),"",JOptionPane.ERROR_MESSAGE);
                    }
                }
                }
              }
//                String info="Is the following information correct?\nMovie Title: "+t
//                        +"\nGenre: "+g+"\nRelease Date: "+rd+"\nLength: "
//                        +l+"\nLanguage: "+l+"\nRating: "+r+"\nBranch: "
//                        +branch;
//                
//                int infoR = JOptionPane.showConfirmDialog(this, info , "Confirm information", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
//                
//                if(infoR == JOptionPane.YES_OPTION){
//                    try{
//
//                    int branchID=0;
//
//                    if(khCB.isSelected())
//                        branchID=1;
//
//                    else if(dmmCB.isSelected())
//                        branchID=2;
//
//                    else
//                        branchID=0;
//                    String ti = titleCB.getSelectedItem().toString();
//
//                    String sql="update Movie set MovieTitle='"+t+"', genre'"+g+"', RDate='"+rd
//                            +"', length='"+l+"', lang="+lang+",Rating='"+r+"', branch='"+branch+"', image='"+filename+"' where MovieTitle="
//                            +ti;
//
//                    pst=con.prepareStatement(sql);
//                    pst.execute();
//                    JOptionPane.showMessageDialog(null, "Record updated sucessfully!", "",JOptionPane.INFORMATION_MESSAGE);
//
//                    titleTxt.setText("");
//                    genreTxt.setText("");
//                    ratingCB.setSelectedIndex(-1);
//                    dateTxt.setText("");
//                    langCB.setSelectedIndex(-1);
//                    lengthTxt.setText("");
//                    ABLbl.setIcon(null);
//                    khCB.setSelected(false);
//                    dmmCB.setSelected(false);
//                    
//                }catch(Exception e){
//                    JOptionPane.showMessageDialog(null, e.getMessage(), "",JOptionPane.ERROR_MESSAGE);
//                }
//                finally{
//                    try{
//                        pst.close();
//                    }catch(Exception e){
//                        JOptionPane.showMessageDialog(null, e.getMessage(),"",JOptionPane.ERROR_MESSAGE);
//                    }
//                }
//                }
                
            } catch(Exception e){
                JOptionPane.showMessageDialog(null, e.getMessage(), "",JOptionPane.ERROR_MESSAGE);
            }
            finally{
                try{

                    pst.close();
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, e.getMessage(),"",JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        else {
            int response3 = JOptionPane.showConfirmDialog(this, "Clear all information?", "Confirm clear", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if(response3 == JOptionPane.YES_OPTION){
                titleTxt.setText("");
                genreTxt.setText("");
                ratingCB.setSelectedIndex(-1);
                dateTxt.setText("");
                langCB.setSelectedIndex(-1);
                lengthTxt.setText("");
                ABLbl.setIcon(null);
                khCB.setSelected(false);
                dmmCB.setSelected(false);
            }
        }
   
         }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void DltBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DltBtnActionPerformed
       int response = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete "+titleTxt.getText()+"?", "Confirm delete", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if(response == JOptionPane.YES_OPTION){
            try{
                
              String sql="delete from Movie where movieTitle=?";
              pst = con.prepareStatement(sql);
              pst.setString(1,titleTxt.getText());
              pst.execute();
              
              String sqlid = "select hallnum from movie where movieTitle='"+titleTxt.getText()+"'";
              pst1 = con.prepareStatement(sqlid);
              rs1 = pst1.executeQuery();
              String hall ="";
              while(rs1.next()){
                 hall= rs1.getString("hallnum");
              }
              
              String sqls = "update seat set available = 1 where hallnum ='"+hall+"'";
              pst2 = con.prepareStatement(sqls);
              pst2.execute();
              
                JOptionPane.showMessageDialog(null, titleTxt.getText()+" deleted successfully");
                titleCB.removeItemAt(titleCB.getSelectedIndex());
             
                titleTxt.setText("");
                genreTxt.setText("");
                ratingCB.setSelectedIndex(-1);
                dateTxt.setText("");
                langCB.setSelectedIndex(-1);
                lengthTxt.setText("");
                ABLbl.setIcon(null);
                khCB.setSelected(false);
                dmmCB.setSelected(false);
               
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, e.getMessage(), "",JOptionPane.ERROR_MESSAGE);
            }
            finally{
                try{
                    pst.close();
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, e.getMessage(),"",JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        else {
            int response2 = JOptionPane.showConfirmDialog(this, "Clear all information?", "Confirm clear", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if(response2 == JOptionPane.YES_OPTION){
                titleTxt.setText("");
                genreTxt.setText("");
                ratingCB.setSelectedIndex(-1);
                dateTxt.setText("");
                langCB.setSelectedIndex(-1);
                lengthTxt.setText("");
                ABLbl.setIcon(null);
                khCB.setSelected(false);
                dmmCB.setSelected(false);
            }

        }
    }//GEN-LAST:event_DltBtnActionPerformed

    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        int response = JOptionPane.showConfirmDialog(this, "Are you sure you want to exit?", "Confirm exit", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if(response == JOptionPane.YES_OPTION){
            System.exit(0);
        }
    }//GEN-LAST:event_exitBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        adminMenu c = new adminMenu();
        c.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_backBtnActionPerformed

    private void srchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_srchBtnActionPerformed

             
      try{
        String sql ="select * from Movie where MovieTitle=?";
       
       
              pst = con.prepareStatement(sql);
             // String t = (titleCB.getSelectedItem().toString());
              pst.setString(1,(titleCB.getSelectedItem().toString()));
              rs =pst.executeQuery();
     
              
              
              while(rs.next()){
               int rcount = ratingCB.getItemCount();
               int lcount = langCB.getItemCount();
               int rindex=0;
               int lindex=0;
               
               
               
               
               for(int i = 0; i < rcount; i++){
                   if(rs.getString("Rating").equals(ratingCB.getItemAt(i))){
                       rindex=i;
                       ratingCB.setSelectedIndex(rindex);
                   }
               }
               
               for(int i = 0; i <= lcount; i++){
                   if(rs.getString("Lang").equals(langCB.getItemAt(i))){
                       lindex=i;
                       langCB.setSelectedIndex(lindex);
                   }
               }
               
               int branch = rs.getInt("branchId");
               if (branch==1){
                   khCB.setSelected(true);
                dmmCB.setSelected(false);
               }
               else if (branch==2){
               khCB.setSelected(false);
                dmmCB.setSelected(true);
               }
               else if (branch==12){
               khCB.setSelected(true);
                dmmCB.setSelected(true);
               }
               
                String title=rs.getString("MovieTitle");
                titleTxt.setText(title);
                
                String genre=rs.getString("genre");
                genreTxt.setText(genre);
                
                String length=rs.getString("Length");
                lengthTxt.setText(length);
                
                String date=rs.getString("RDate");
                dateTxt.setText(date.substring(0,10));

                
                String AP=rs.getString("image");
                ImageIcon imageicon = new ImageIcon(new ImageIcon(AP).getImage().getScaledInstance(ABLbl.getWidth(),ABLbl.getHeight(),Image.SCALE_DEFAULT));
                ABLbl.setIcon(imageicon);
         
              }    
               
            
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage(), "",JOptionPane.ERROR_MESSAGE);
        }
        finally{
            try{
                rs.close();
                pst.close();
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, e.getMessage(),"",JOptionPane.ERROR_MESSAGE);
            }
        } 
    }//GEN-LAST:event_srchBtnActionPerformed

    private void titleCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_titleCBActionPerformed
        //        titleCB.getSelectedItem();
    }//GEN-LAST:event_titleCBActionPerformed
   private void displaytoCB(){
        
        String sql ="select * from Movie";
        try{
            pst = con.prepareStatement(sql);
            rs =pst.executeQuery();
            while(rs.next()){
                String Title = rs.getString("movieTitle");
                titleCB.addItem(Title);
                
            }
        }
        catch(Exception e){
             JOptionPane.showMessageDialog(null, e.getMessage(),"",JOptionPane.ERROR_MESSAGE);
            
        }
        
    }
//      private static boolean checkIfDateIsValid(String date) {
//        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
//        format.setLenient(false);
//        try {
//            format.parse(date);
//        } catch (ParseException e) {
//            return false;
//        }
//        return true;
//    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(addMovie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(addMovie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(addMovie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(addMovie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new addMovie().setVisible(true);
            }
        });
    }

        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ABLbl;
    private javax.swing.JButton DltBtn;
    private javax.swing.JButton addbtn;
    private javax.swing.JButton attachbtn;
    private javax.swing.JButton backBtn;
    private javax.swing.JButton clearBtn;
    private javax.swing.JTextField dateTxt;
    private javax.swing.JCheckBox dmmCB;
    private javax.swing.JButton exitBtn;
    private javax.swing.JTextField genreTxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JCheckBox khCB;
    private javax.swing.JComboBox<String> langCB;
    private javax.swing.JTextField lengthTxt;
    private javax.swing.JComboBox<String> ratingCB;
    private javax.swing.JButton srchBtn;
    private javax.swing.JComboBox<String> titleCB;
    private javax.swing.JTextField titleTxt;
    // End of variables declaration//GEN-END:variables

        private ImageIcon format = null;
        String filename = null;
        byte [] movieImage =null;
        int branchID;
        
        
        
  public static boolean checkRD(String checksrd){
      boolean valid = true;
      Pattern DATE_PATTERN = Pattern.compile("^\\d{4}-\\d{2}-\\d{2}$");
      
      if(!(DATE_PATTERN.matcher(checksrd).matches()))  {
            valid =false;
             }
    
    return valid;
}      
        
   public static boolean checklength(String checksl){
      boolean valid = true;
     String lformat = "^\\d[H]\\d{2}[M]$";
             Pattern pattern = Pattern.compile(lformat);
             Matcher lengthfor = pattern.matcher(checksl);
             if(!(lengthfor.matches()))  {
            valid =false;
             }
    
    return valid;
}        
        
        
        
        
        
private boolean checkspnb;
private boolean checkstb;
private boolean  checksgb =true;
private boolean  checksdateb;
private boolean  checkslengb;
private boolean  ckeckall = true;
private boolean  ckeckall1 = true;
private boolean  ckeckall2 = true;

public static String movienameh;
}
